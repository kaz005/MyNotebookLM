project_name: AI要約・解説＆音声化ツール
overview: |
  Web記事・画像・テキストを AI で要約・解説し、日本語音声に変換するツール。
  入力 → 要約 → 音声化までをワンストップで提供し、Web UI と CLI の両方で利用可能。

functional_requirements:
  input:
    url:
      description: HTTPS URL の記事を取得し、本文テキストを抽出する
      constraints:
        - max_length: 100000          # 文字数
        - allowed_schemes: ["https"]
    image:
      description: 画像から OCR でテキストを抽出する
      constraints:
        - formats: ["png", "jpg", "jpeg", "webp"]
        - max_size_mb: 10
    text:
      description: 直接貼り付けまたはファイルアップロードされたテキスト
      constraints:
        - max_length: 100000

  processing:
    summarization:
      description: AI により日本語要約・解説を生成する
      parameters:
        length: [50, 100, 200, 400]       # 文字数プリセット
        detail_level: ["gist", "standard", "detailed"]
      api_switch:
        description: ダミー⇄本番APIを環境変数またはDIで切替可能
        default: dummy
    speech_synthesis:
      description: 要約結果を日本語音声に変換する
      parameters:
        speed: [0.8, 1.0, 1.2]            # 再生速度
        pitch: [-2, 0, 2]                 # 半音単位
        voice_type: ["female", "male", "child"]
      output_format: ["mp3", "wav"]
      engine_plugin:
        description: TTSエンジンはプラグイン方式で差し替え可能
        default: gTTS
        options: ["gTTS", "VOICEVOX", "GoogleCloudTTS"]
    ocr:
      description: CleanShot API による OCR 処理
      output: extracted_text

  ui:
    web_app:
      description: ブラウザベースの SPA
    cli:
      description: `aisum` コマンドによる操作

  storage:
    history:
      description: 要約と音声ファイルをユーザー毎に保存
      metadata_backend: ["sqlite", "duckdb"]
      retention_days: 30
      tag_delete: true
      capacity_limit_mb: 500

  export:
    description: 要約結果をダウンロード可能
    formats: ["txt", "pdf", "mp3", "wav"]
    pdf_xss_sanitize: true

non_functional_requirements:
  performance:
    latency_p95_sec: 5
    concurrent_requests: 20
  scalability: cloud_native
  availability: "99.5%"
  security:
    encryption_in_transit: tls1.2_plus
    personal_data_masking: true
    api_key_management: ["dotenv", "github_secrets"]
    api_key_rotation_policy: 90d
    audit_log: true
    tts_license_notice: true
  accessibility:
    aria_compliant: true
    contrast_ratio: "4.5:1"
    keyboard_navigation: true
    wcag_level: "2.1 AA"
  ci_cd:
    github_actions: true
    triggers: ["push", "pull_request", "schedule_daily"]
    test_coverage_threshold: 85
    test_data_fixtures: "tests/fixtures/ (LFS管理)"
  documentation:
    readme_local_docker: true
    changelog_keep_a_changelog: true
    architecture_decision_record: true
  db_strategy:
    backend_options: ["sqlite", "duckdb"]
    scale_note: "同時アクセスやクラウド移行時はマネージドDB検討"

error_handling:
  - code: ERR_INVALID_URL
    description: 無効な URL
  - code: ERR_OCR_FAIL
    description: OCR 抽出失敗
  - code: ERR_TTS_TIMEOUT
    description: 音声合成 API タイムアウト
  - code: ERR_INPUT_TOO_LONG
    description: 入力が最大長を超過
  - code: ERR_EMPTY_INPUT
    description: 入力が空またはNone
  - code: ERR_UNSUPPORTED_FORMAT
    description: 未対応の画像/ファイル形式
  - code: ERR_PDF_GENERATION
    description: PDF生成失敗（フォント含む）
  - code: ERR_STORAGE_FULL
    description: ストレージ容量超過

logging_and_monitoring:
  metrics:
    - summarization_success_rate
    - tts_success_rate
    - avg_processing_time_sec
  log_level: INFO
  log_format: json
  trace_id: true
  alert_thresholds:
    summarization_fail_rate: 0.05   # 5%超でアラート
    tts_fail_rate: 0.05
  alert_channels:
    - slack
  log_retention_days: 30
  log_storage: elk

acceptance_criteria:
  - description: 有効な URL を入力し、200 文字の要約と mp3 音声が 5 秒以内に返る
  - description: 5 MB の JPEG 画像から OCR → 要約 → 音声生成が成功する
  - description: CLI で `aisum --file sample.txt --length 100` が終了コード 0 で完了
  - description: APIスイッチ機構でダミー/本番を切替えテストが通る
  - description: cron E2Eで実APIが毎日正常応答する
  - description: PDF出力時にXSS/不正スクリプトが除去される
  - description: 履歴DBで30日超・タグ指定・容量超過時に自動削除される

test_strategy:
  unit:
    api: mock_only
  integration:
    api: vcrpy_cassette
  e2e:
    api: real_request_daily
    kpi:
      response_sec: 5
      success_rate: 100

risk_management:
  gemini_cost_limit:
    token_limit: true
    streaming_summary: true
  tts_engine_eol:
    plugin_architecture: true
  pdf_font_error:
    font_embed: "Noto Sans"